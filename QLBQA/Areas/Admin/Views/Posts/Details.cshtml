@model QLBQA.Models.Post

@{
    ViewBag.Title = "Details";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<html>
@section Styles{

    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css" rel="stylesheet">
    <link href="~/assets/Admin_assets/css/app.min.css" rel="stylesheet">
    <style>
        .note-editor {
            background: white;
        }
    </style>
}
@{
    var thumbPath = "~/Content/images/thumb_post_" + Model.Thumb;
}


@Html.AntiForgeryToken()

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<div class="page-header no-gutters has-tab">
    <div class="d-md-flex m-b-15 align-items-center justify-content-between">
        <div class="media align-items-center m-b-15">

            <div class="m-l-15">
                <h4 class="m-b-0">Chi tiết bài đăng</h4>
            </div>
        </div>

    </div>
    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link active" data-toggle="tab" href="#product-edit-basic">Thông tin cơ bản</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-toggle="tab" href="#product-edit-description">Nội dung</a>
        </li>
    </ul>
</div>
<div class="tab-content m-t-15">
    <div class="tab-pane fade show active" id="product-edit-basic">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="form-group col-6">
                        <p class="control-label col-md-2">ID</p>
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.PostID, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>
                    <div class="form-group col-6">
                        <p class="control-label col-md-3">Tiêu đề</p>
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>
                </div>
                <div class="row">

                    <div class="form-group col-6">
                        <p class="control-label col-md-2">Thumb</p>
                        <div class="col-md-10">
                            <img id="output" class="img-rounded" alt="thumb" width="100" src="@Url.Content(@thumbPath)" />
                        </div>
                    </div>
                    <div class="form-group col-6">
                        <p class="control-label col-md-2">Ngày tạo</p>
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })


                        </div>
                    </div>

                </div>


                <div class="row">
                    <div class="form-group col-6">
                        <p class="control-label col-md-3">Meta Desc</p>
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.MetaDesc, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>
                    <div class="form-group col-6">
                        <p class="control-label col-md-3">Meta Key</p>
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.MetaKey, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                </div>
                <div class="form-group">
                    <div class=" col-md-10">
                        @if (Model.Pulished)
                        {
                            <div class="d-flex align-items-center">
                                <div class="badge badge-success badge-dot m-r-10"></div>
                                <div>Published</div>
                            </div>
                        }
                        else
                        {
                            <div class="d-flex align-items-center">
                                <div class="badge badge-danger badge-dot m-r-10"></div>
                                <div>Unpublished</div>
                            </div>
                        }


                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @if (!Model.isHot)
                        {
                            <div class="checkbox">
                                <input id="" type="checkbox" disabled="">
                                <label for="">Hot</label>
                            </div>
                        }
                        else
                        {
                            <div class="checkbox">
                                <input id="" type="checkbox" checked="" disabled="">
                                <label for="">Hot</label>
                            </div>
                        }
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-10">
                        @if (!Model.isNewfeed)
                        {
                            <div class="checkbox">
                                <input id="" type="checkbox" disabled="">
                                <label for="">New feed</label>
                            </div>
                        }
                        else
                        {
                            <div class="checkbox">
                                <input id="" type="checkbox" checked="" disabled="">
                                <label for="">New feed</label>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

    </div>


    <div class="tab-pane fade" id="product-edit-description">
        <div class="card">
            <div class="card-body">
                <div class="form-group">
                    <p class="control-label col-md-2">Tóm tắt</p>
                    <div class=" col-md-12">
                        @Html.TextAreaFor(model => model.SContents, new { @class = "form-control", style = "height: 100px;", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.isNewfeed, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="form-group">
                    <p class="control-label col-md-2">Nội dung</p>
                    <div class=" col-md-12">
                        <textarea id="summernote">@Model.Contents</textarea>
                        @Html.HiddenFor(model => model.Contents, new { @class = "form-control", id = "HiddenContent" })


                    </div>
                </div>


            </div>
        </div>
    </div>

</div>



<div class="form-group">
    <div class="col-md-10">
        <a class="btn btn-warning m-r-5" href="@Url.Action("Edit", "Posts", new { id = Model.PostID })" title="Edit">Sửa</a>
        <a class="btn btn-info m-r-5" href="@Url.Action("Index", "Posts",1)" title="Back">Trở về</a>
    </div>
</div>

<script>
    var loadfile = function (event) {
        var image = document.getElementById('output');
        image.src = URL.createObjectURL(event.target.files[0]);
    };




</script>


@section Scripts {

    <script src="~/assets/Admin_assets/js/pages/e-commerce-product-edit.js"></script>

    <!-- Core JS -->
    <script src="~/assets/Admin_assets/js/app.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js"></script>
    <script>
        jQuery(document).ready(function () {
            $('#summernote').summernote({
                fontNames: ['Arial', 'Arial Black', 'Comic Sans MS', 'Courier New'],
                styleTags: ['p', 'h1', 'h2', 'h3', 'h4', 'h5'],
                height: 200,
                minHeight: null,
                maxHeight: null,
                focus: true
            });
        });

    </script>
    <script>
        window.onload = function () {
            //var elements = document.getElementsByClassName('note-editable');
            //for (var i = 0; i < elements.length; i++) {
            //    elements[i].contentEditable = "false";
            //}
            $('#summernote').summernote('disable');
        };

    </script>
}
</html>