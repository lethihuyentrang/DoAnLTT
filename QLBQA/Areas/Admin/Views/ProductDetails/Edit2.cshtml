@model List<QLBQA.Models.ProductDetail>

@{
    ViewBag.Title = "Chỉnh sửa số lượng";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        <h2>Chỉnh sửa số lượng</h2>
        <a id="goToCreateBtn" class="btn btn-success m-r-5" href="@Url.Action("Create2", "ProductDetails")" title="Add">Thêm thuộc tính</a>
    </div>
</div>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
@Html.Hidden("Id", TempData["ProductId"])
@Html.Hidden("Name", TempData["ProductName"])
@using (Html.BeginForm("Edit2", "ProductDetails", FormMethod.Post, new { id = "editForm" }))
{
    @Html.AntiForgeryToken()

    <table class="table">
        <tr>
            <th>Sản phẩm</th>
            <th>Màu sắc</th>
            <th>Size</th>
            <th>Số lượng</th>
        </tr>
        @for (int i = 0; i < Model.Count; i++)
        {
            <tr>

                <td>@Html.DisplayFor(modelItem => Model[i].Product.ProductName)</td>

                <td>@Html.DisplayFor(modelItem => Model[i].Color.ColorName)</td>

                <td>@Html.DisplayFor(modelItem => Model[i].Size.SizeName)</td>
                <td>
                    <input type="hidden" id="productId_@i" value="@Model[i].Product.ProductID" />
                    <input type="hidden" id="productDetailId_@i" value="@Model[i].ProductDetailID" />
                    <input type="hidden" id="colorId_@i" value="@Model[i].ColorID" />
                    <input type="hidden" id="sizeId_@i" value="@Model[i].SizeID" />
                    <input type="number" id="quantity_@i" value="@Model[i].Quantity" />

                </td>
                <td>
                    <a class="btn btn-warning m-r-5" href="@Url.Action("Delete", "ProductDetails", new { id = Model[i].ProductDetailID })" title="Delete">Xóa</a>
                </td>
            </tr>

        }
    </table>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input id="saveButton" class="btn btn-success m-r-5" type="submit" value="Lưu" />
            <a class="btn btn-danger m-r-5" href="@Url.Action("Index", "Products")" title="Back">Hủy</a>
        </div>
    </div>
}

<script>
 $(document).ready(function () {
    $("#editForm").submit(function (event) {
        event.preventDefault(); // Ngăn chặn gửi form một cách tự động

        var productDetails = []; // Khởi tạo mảng để lưu trữ các đối tượng productDetail

        // Lặp qua mỗi hàng trong bảng
        $("#editForm table tr:gt(0)").each(function () {
            // Lấy giá trị của các ô input trong từng hàng
            var productId = parseInt($(this).find('input[id^="productId_"]').val());
            var productDetailId = parseInt($(this).find('input[id^="productDetailId_"]').val());
            var colorId = parseInt($(this).find('input[id^="colorId_"]').val());
            var sizeId = parseInt($(this).find('input[id^="sizeId_"]').val());
            var quantity = parseInt($(this).find('input[id^="quantity_"]').val());

            // Tạo đối tượng productDetail từ các giá trị thu thập được
            var productDetail = {
                ProductID: productId,
                ProductDetailID: productDetailId,
                ColorID: colorId,
                SizeID: sizeId,
                Quantity: quantity
            };

            // Thêm productDetail vào mảng productDetails
            productDetails.push(productDetail);
        });

        console.log(productDetails);
        console.log(JSON.stringify(productDetails));

        var token = $('input[name="__RequestVerificationToken"]').val();
         $.ajax({
        url: '@Url.Action("Edit", "ProductDetails")',
        type: 'POST',
        data: { productDetails: productDetails, __RequestVerificationToken: token }, // Thêm token vào dữ liệu gửi đi
         success: function (result) { // Hàm được gọi khi request thành công
                console.log("Chỉnh sửa thành công");
                window.location.href = '@Url.Action("Index", "Products")';
            },
            error: function (xhr, status, error) { // Hàm được gọi khi có lỗi xảy ra trong quá trình request
                console.error("Lỗi khi chỉnh sửa: " + error);
                // Xử lý lỗi nếu cần
            }
    });


    });
});
//window.onload = function () {
//        // Lấy giá trị từ Local Storage khi trang được tải
//        var productId = localStorage.getItem("productId");
//        var productName = localStorage.getItem("productName");
//          localStorage.setItem("productId", productId);
//             localStorage.setItem("productName", productName);

//    };


    $("#goToCreateBtn").click(function () {
        // Lấy giá trị của productId và productName từ các thẻ HTML
        var productId = $("#Id").val();
        var productName = $("#Name").val();
        localStorage.setItem("productId", productId);
        localStorage.setItem("productName", productName);
    });
</script>

